<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.intranet.member.model.dao.MemberMapper">

    <resultMap id="MemberResultMap" type="com.ohgiraffers.intranet.member.model.dto.MemberDTO">
        <id property="mem_num" column="MEM_NUM"/>
        <result property="mem_id" column="MEM_ID"/>
        <result property="mem_pw" column="MEM_PW"/>
        <result property="mem_name" column="MEM_NAME"/>
        <result property="mem_phone" column="MEM_PHONE"/>
        <result property="mem_joinDate" column="MEM_JOINDATE"/>
        <result property="mem_birth" column="MEM_BIRTH"/>
        <result property="mem_email" column="MEM_EMAIL"/>
        <result property="mem_address" column="MEM_ADDRESS"/>
        <result property="dept_rank" column="DEPT_RANK"/>
        <result property="dept_code" column="DEPT_CODE"/>

        <association property="department" resultMap="departmentResultMap"/>
        <collection property="authorit" resultMap="authoritResultMap"/>
    </resultMap>

    <resultMap id="authoritResultMap" type="com.ohgiraffers.intranet.authorManage.model.dto.AuthoritDTO">
        <result property="memNum" column="MEM_NUM"/>
        <result property="auCode" column="AU_CODE"/>
        <collection property="au_authorization" resultMap="au_authorizationResultMap"/>
    </resultMap>

    <resultMap id="departmentResultMap" type="com.ohgiraffers.intranet.member.model.dto.DepartmentDTO">
        <id property="dept_code" column="DEPT_CODE"/>
        <result property="dept_name" column="DEPT_NAME"/>
    </resultMap>

    <resultMap id="au_authorizationResultMap" type="com.ohgiraffers.intranet.member.model.dto.Au_AuthorizationDTO">
        <id property="au_code" column="AU_CODE"/>
        <result property="au_name" column="AU_NAME"/>
        <result property="au_contents" column="AU_CONTENTS"/>
    </resultMap>

<!--    <select id="memberLogin" resultMap="MemberResultMap">-->
<!--        SELECT-->
<!--               A.MEM_NUM-->
<!--             , A.MEM_ID-->
<!--             , A.MEM_PW-->
<!--             , A.MEM_NAME-->
<!--             , A.MEM_PHONE-->
<!--             , A.MEM_JOINDATE-->
<!--             , A.MEM_BIRTH-->
<!--             , A.MEM_EMAIL-->
<!--             , A.MEM_ADDRESS-->
<!--             , A.DEPT_RANK-->
<!--             , A.DEPT_CODE-->
<!--             , B.DEPT_NAME-->
<!--             , B.DEPT_CODE-->
<!--             , C.AU_CODE-->
<!--             , C.MEM_NUM-->
<!--             , D.AU_CODE-->
<!--             , D.AU_NAME-->
<!--             , D.AU_CONTENTS-->
<!--          FROM MEMBER A-->
<!--          LEFT JOIN DEPARTMENT B ON (A.DEPT_CODE = B.DEPT_CODE)-->
<!--          LEFT JOIN AUTHORIT C on (A.MEM_NUM = C.MEM_NUM)-->
<!--          LEFT JOIN AU_AUTHORIZATION D ON (C.AU_CODE = D.AU_CODE)-->
<!--         WHERE A.MEM_ID = #{ mem_id }-->
<!--    </select>-->

    <insert id="memberRegistInsert" parameterType="com.ohgiraffers.intranet.member.model.dto.MemberDTO">
                INSERT /* member.dao.MemberMapper#memberRegistInsert*/
                  INTO MEMBER A
                (
                  A.MEM_NUM
                , A.MEM_ID
                , A.MEM_PW
                , A.MEM_NAME
                , A.MEM_PHONE
                , A.MEM_JOINDATE
                , A.MEM_BIRTH
                , A.MEM_EMAIL
                , A.MEM_ADDRESS
                , A.DEPT_RANK
                , A.DEPT_CODE
                )
                VALUES
                (
                  #{ mem_num }
                , #{ mem_id }
                , #{ mem_pw }
                , #{ mem_name }
                , #{ mem_phone }
                , #{ mem_joinDate }
                , #{ mem_birth }
                , #{ mem_email }
                , #{ mem_address }
                , #{ dept_rank }
                , #{ dept_code }
                )
    </insert>

    <select id="findByMemberId" resultMap="MemberResultMap">
        SELECT
               A.MEM_NUM
             , A.MEM_ID
             , A.MEM_PW
             , A.MEM_NAME
             , A.MEM_PHONE
             , A.MEM_JOINDATE
             , A.MEM_BIRTH
             , A.MEM_EMAIL
             , A.MEM_ADDRESS
             , A.DEPT_RANK
             , A.DEPT_CODE
             , B.DEPT_NAME
             , C.AU_CODE
             , D.AU_NAME
             , D.AU_CONTENTS
        FROM MEMBER A
        LEFT JOIN DEPARTMENT B ON (A.DEPT_CODE = B.DEPT_CODE)
        LEFT JOIN AUTHORIT C on (A.MEM_NUM = C.MEM_NUM)
        LEFT JOIN AU_AUTHORIZATION D ON (C.AU_CODE = D.AU_CODE)
        WHERE A.MEM_ID = #{ mem_id }
    </select>

    <select id="selectCheckMember" resultType="String">
        SELECT /* member.dao.MemberMapper#selectMember*/
               A.MEM_ID
          FROM MEMBER A
         WHERE A.MEM_ID = #{ mem_id }
    </select>

    <select id="selectMemberListForCalendarManage" resultMap="MemberResultMap">
        SELECT
               A.MEM_NUM
             , A.MEM_NAME
             , A.DEPT_RANK
             , A.MEM_JOINDATE
             , A.MEM_PHONE
             , A.MEM_EMAIL
             , A.DEPT_CODE
             , B.AU_CODE
             , C.DEPT_NAME
        FROM MEMBER A
        JOIN DEPARTMENT C ON(A.DEPT_CODE = C.DEPT_CODE)
        LEFT JOIN AUTHORIT B ON(A.MEM_NUM = B.MEM_NUM)
        <where>
            <if test="searchCondition != null and searchCondition != 'all'">
                A.DEPT_CODE = #{ searchCondition }
            </if>
        AND (B.AU_CODE IS NULL OR B.AU_CODE = 'ROLE_CD_ALL' OR B.AU_CODE = 'ROLE_CD_DEPT')
        </where>
        ORDER BY A.MEM_NUM, B.AU_CODE
    </select>

    <select id="selectDeptList" resultMap="departmentResultMap">
        SELECT
                A.DEPT_CODE
              , A.DEPT_NAME
           FROM DEPARTMENT A
    </select>

    <select id="selectMemNumById" resultType="_int">
        SELECT
                A.MEM_NUM
        FROM MEMBER A
       WHERE A.MEM_ID = #{mem_id}
    </select>
    
    <delete id="deleteCalendarAuthority">
        DELETE
        FROM AUTHORIT
        WHERE MEM_NUM = #{ memNum }
        AND (AU_CODE = 'ROLE_CD_DEPT' OR AU_CODE= 'ROLE_CD_ALL')
    </delete>

    <insert id="insertCalendarAuthority" parameterType="AuthoritDTO">
        INSERT
          INTO AUTHORIT A
          (
            A.MEM_NUM
          , A.AU_CODE
          )
          VALUES
          (
           #{ memNum }
          , #{ auCode }
          )

    </insert>
</mapper>