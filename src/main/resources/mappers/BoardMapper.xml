<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <mapper namespace="com.ohgiraffers.intranet.board.model.dao.BoardMapper" >

    <resultMap id="boardResultMap" type="com.ohgiraffers.intranet.board.model.dto.FreeinsertDTO">
        <id property="no" column="FR_NO"/>
        <result property="title" column="FR_TITLE"/>
        <result property="date" column="FR_DATE"/>
        <result property="views" column="FR_VIEWS"/>
        <result property="contents" column="FR_CONTENTS"/>
        <result property="mem_num" column="MEM_NUM"/>

        <association property="member" resultMap="memberResultMap"/>
        <association property="department" resultMap="deptResultMap"/>
    </resultMap>

    <resultMap id="memberResultMap" type="com.ohgiraffers.intranet.member.model.dto.MemberDTO">
        <id property="mem_num" column="MEM_NUM"/>
        <result property="mem_id" column="MEM_ID"/>
        <result property="mem_pw" column="MEM_PW"/>
        <result property="mem_name" column="MEM_NAME"/>
        <result property="mem_phone" column="MEM_PHONE"/>
        <result property="mem_joinDate" column="MEM_JOINDATE"/>
        <result property="mem_birth" column="MEM_BIRTH"/>
        <result property="mem_email" column="MEM_EMAIL"/>
        <result property="mem_address" column="MEM_ADDRESS"/>
        <result property="dept_rank" column="DEPT_RANK"/>
        <result property="dept_code" column="DEPT_CODE"/>

        <association property="department" resultMap="deptResultMap"/>
    </resultMap>

    <resultMap id="deptResultMap" type="com.ohgiraffers.intranet.member.model.dto.DepartmentDTO">
        <id property="dept_code" column="DEPT_CODE"/>
        <result property="dept_name" column="DEPT_NAME"/>
    </resultMap>

    <resultMap id="eiboardResultMap" type="com.ohgiraffers.intranet.board.model.dto.AnonyDTO">
        <id property="no" column="NB_NO"/>
        <result property="title" column="NB_TITLE"/>
        <result property="date" column="NB_DATE"/>
        <result property="views" column="NB_VIEWS"/>
        <result property="contents" column="NB_CONTENTS"/>
        <result property="mem_num" column="MEM_NUM"/>

        <association property="member" resultMap="memberResultMap"/>

    </resultMap>

    <resultMap id="boardcomment" type="com.ohgiraffers.intranet.board.model.dto.CommentDTO">
        <id property="fc_no" column="FC_NO"/>
        <result property="contents" column="FC_CONTENTS"/>
        <result property="date" column="FC_DATE"/>
        <result property="mem_num" column="MEM_NUM"/>
        <result property="fr_no" column="FR_NO"/>

        <association property="member" resultMap="memberResultMap"/>


    </resultMap>

    <resultMap id="boardeicomment" type="com.ohgiraffers.intranet.board.model.dto.EiCommentDTO">
        <id property="nc_no" column="NC_NO"/>
        <result property="contents" column="NC_CONTENTS"/>
        <result property="date" column="NC_DATE"/>
        <result property="mem_num" column="MEM_NUM"/>
        <result property="nb_no" column="NB_NO"/>

        <association property="member" resultMap="memberResultMap"/>


    </resultMap>

    <resultMap id="cajaxselect" type="com.ohgiraffers.intranet.board.model.dto.SelAjaxDTO">
        <result property="a1" column="A1"/>
        <result property="a2" column="A2"/>
        <result property="a3" column="A3"/>
        <result property="a4" column="A4"/>
        <result property="a5" column="A5"/>
        <result property="a6" column="A6"/>
        <result property="a7" column="A7"/>
        <result property="a8" column="A8"/>
        <result property="a9" column="A9"/>
        <result property="a10" column="A10"/>
    </resultMap>



    <select id="selectBoardList" resultMap="boardResultMap">
        SELECT A.RNUM
        , A.FR_NO
        , A.MEM_NUM
        , A.FR_TITLE
        , D.MEM_NAME
        , A.FR_DATE
        , E.DEPT_NAME
        , A.FR_VIEWS

        FROM (SELECT ROWNUM RNUM
        , B.FR_NO
        , B.FR_TITLE
        , B.FR_DATE
        , B.FR_VIEWS
        , B.MEM_NUM
        FROM (SELECT
          C.FR_NO
        , C.FR_TITLE
        , C.FR_DATE
        , C.FR_VIEWS
        , C.MEM_NUM
        FROM FR_FREE C

        <where>
            <if test="searchCondition == 'title'">
              AND C.FR_TITLE LIKE '%' || #{ searchValue } || '%'
            </if>
        </where>
        ORDER BY C.FR_NO DESC
        ) B
        <![CDATA[
              WHERE ROWNUM <= #{ endRow }
              ]]>
        ) A
        LEFT JOIN MEMBER D ON(A.MEM_NUM = D.MEM_NUM)
        LEFT JOIN DEPARTMENT E ON(D.DEPT_CODE = E.DEPT_CODE)
        WHERE A.RNUM >= #{ startRow }
        ORDER BY 1 ASC
    </select>

    <select id="selectTotalCount" resultType="_int" parameterType="hashmap">
        SELECT COUNT(*)
        FROM FR_FREE A

        <where>

            <if test="searchCondition == 'title'">
                A.FR_TITLE LIKE '%' || #{ searchValue } || '%'
            </if>
        </where>
    </select>

    <select id="selectBoardDetail" parameterType="String" resultMap="boardResultMap">
        SELECT
            A.FR_NO
             , A.FR_TITLE
             , B.MEM_NAME
             , A.FR_DATE
             , C.DEPT_NAME
             , A.FR_VIEWS
             , A.MEM_NUM
             , A.FR_CONTENTS
        FROM FR_FREE A
                 LEFT JOIN MEMBER B ON (A.MEM_NUM = B.MEM_NUM)
                 LEFT JOIN DEPARTMENT C ON(B.DEPT_CODE = C.DEPT_CODE)
        WHERE A.FR_NO = #{ no }
    </select>


        <insert id="freeinsert" parameterType="com.ohgiraffers.intranet.board.model.dto.FreeinsertDTO">
        INSERT
        INTO FR_FREE A(
            A.FR_NO
           ,A.FR_TITLE
           ,A.FR_DATE
           ,A.FR_VIEWS
           ,A.FR_CONTENTS
           ,A.MEM_NUM
           ) VALUES(
                    'FR' || SEQ_FR_NO.NEXTVAL
                        ,#{title}
                        ,SYSDATE
                        ,DEFAULT
                        ,#{contents}
                        ,#{mem_num}
            )
    </insert>

    <update id="incresementBoardCount" parameterType="string">
        update fr_free
        set fr_views =  nvl(fr_views, 0) + 1
        where fr_no = #{no}

    </update>
    
    <update id="boardUpdate">
        UPDATE
            FR_FREE
        SET FR_TITLE = #{ title }
           ,FR_CONTENTS = #{ contents }
        WHERE FR_NO = #{ no }


    </update>




    <select id="selectBoardListe" resultMap="eiboardResultMap">
        SELECT A.RNUM
        , A.NB_NO
        , A.MEM_NUM
        , A.NB_TITLE
        , D.MEM_NAME
        , A.NB_DATE
        , A.NB_VIEWS

        FROM (SELECT ROWNUM RNUM
        , B.NB_NO
        , B.NB_TITLE
        , B.NB_DATE
        , B.NB_VIEWS
        , B.MEM_NUM
        FROM (SELECT
        C.NB_NO
        , C.NB_TITLE
        , C.NB_DATE
        , C.NB_VIEWS
        , C.MEM_NUM
        FROM NB_NONE C

        <where>
            <if test="searchCondition == 'title'">
                AND  C.NB_TITLE LIKE '%' || #{ searchValue } || '%'
            </if>

        </where>
        ORDER BY C.NB_DATE DESC
        ) B
        <![CDATA[
              WHERE ROWNUM <= #{ endRow }
              ]]>
        ) A
        LEFT JOIN MEMBER D ON(A.MEM_NUM = D.MEM_NUM)
        WHERE A.RNUM >= #{ startRow }
        ORDER BY 1 ASC
    </select>

    <select id="selectTotalCounte" resultType="_int" parameterType="hashmap">
        SELECT COUNT(*)
        FROM NB_NONE A
        <where>

            <if test="searchCondition == 'title'">
                A.NB_TITLE LIKE '%' || #{ searchValue } || '%'
            </if>
        </where>
    </select>

    <insert id="anonyinsert" parameterType="com.ohgiraffers.intranet.board.model.dto.AnonyDTO">
        INSERT
        INTO NB_NONE A(
            A.NB_NO
           ,A.NB_TITLE
           ,A.NB_DATE
           ,A.NB_VIEWS
           ,A.NB_CONTENTS
           ,A.MEM_NUM
           ) VALUES(
            'NB' || SEQ_NB_NO.NEXTVAL
                ,#{title}
                ,SYSDATE
                ,DEFAULT
                ,#{contents}
                ,#{mem_num}
            )
    </insert>

    <select id="selecteiBoardDetail" parameterType="String" resultMap="eiboardResultMap">
        SELECT
            A.NB_NO
             , A.NB_TITLE
             , B.MEM_NAME
             , A.NB_DATE
             , A.NB_VIEWS
             , A.MEM_NUM
             , A.NB_CONTENTS
        FROM NB_NONE A
                 LEFT JOIN MEMBER B ON (A.MEM_NUM = B.MEM_NUM)

        WHERE A.NB_NO = #{ no }
    </select>
    <update id="incresementeiBoardCount" parameterType="string">
        update nb_none
        set nb_views =  nvl(nb_views, 0) + 1
        where nb_no = #{no}

    </update>

    <update id="boardeiUpdatePag">
        UPDATE
           NB_NONE
        SET NB_TITLE = #{ title }
          ,NB_CONTENTS = #{ contents }
        WHERE NB_NO = #{ no }


    </update>

    <insert id="boardcomment">
        INSERT
        INTO FC_FREE_COMMENT A(
            A.FC_NO
           ,A.FC_CONTENTS
           ,A.FC_DATE
           ,A.MEM_NUM
           ,A.FR_NO
           ) VALUES(
            'FC' || SEQ_FC_NO.NEXTVAL
               ,#{contents}
               ,SYSDATE
               ,#{mem_num}
               ,#{fr_no}
            )
    </insert>

    <select id="selectComentList" resultMap="boardcomment">
        SELECT
               A.FC_NO
             , A.FC_CONTENTS
             , A.FC_DATE
             , A.MEM_NUM
             , A.FR_NO
             , B.MEM_NAME
          FROM FC_FREE_COMMENT A
          LEFT JOIN MEMBER B ON(A.MEM_NUM = B.MEM_NUM)
     WHERE FR_NO = #{ fr_no }
    </select>
<!--        익명 인설트-->
    <insert id="boardeicomment">
        INSERT
        INTO NC_NONE_COMMENT A(
            A.NC_NO
           ,A.NC_CONTENTS
           ,A.NC_DATE
           ,A.MEM_NUM
           ,A.NB_NO
           ) VALUES(
            'NC' || SEQ_NC_NO.NEXTVAL
                ,#{contents}
                ,SYSDATE
                ,#{mem_num}
                ,#{nb_no}
            )
    </insert>
<!--            익명 셀렉트-->
    <select id="selecteiComentList" resultMap="boardeicomment">
        SELECT
            A.NC_NO
             , A.NC_CONTENTS
             , A.NC_DATE
             , A.MEM_NUM
             , A.NB_NO
             , B.MEM_NAME
        FROM NC_NONE_COMMENT A
                 LEFT JOIN MEMBER B ON(A.MEM_NUM = B.MEM_NUM)
        WHERE NB_NO = #{ nb_no }
    </select>

    <delete id="eeiboardDelete" >
        DELETE
        FROM NC_NONE_COMMENT
        WHERE NB_NO = #{ no }

    </delete>


    <delete id="eiboardDelete" >
        DELETE
        FROM NB_NONE
        WHERE NB_NO = #{ no }

    </delete>


    <delete id="boardcommentDelete" >
        DELETE
        FROM FC_FREE_COMMENT
        WHERE FR_NO = #{ no }

    </delete>


    <delete id="boardDelete" >
        DELETE
        FROM FR_FREE
        WHERE FR_NO = #{ no }

    </delete>

    <select id="ajaxBlacklistCnt" resultMap="cajaxselect">
        -- 기존에 블랙리스트 있는지 여부 (0 이상이면 있다) for 공용
        SELECT TO_CHAR(count(1)) AS a1
             ,' ' a2
             ,' ' a3
             ,' ' a4
             ,' ' a5
             ,' ' a6
             ,' ' a7
             ,' ' a8
             ,' ' a9
             ,' ' a10
        FROM MEM_BLACKLIST_AUTH
        WHERE MEM_NUM = (SELECT MEM_NUM FROM FR_FREE
                         WHERE FR_NO = #{ ATTRIBUTE1 })
    </select>

    <insert id="ajaxBlacklistFRInsert">
        -- 없으면 새로생성(권한자는 일단 전부 부여로) for 자유게시판
        INSERT INTO MEM_BLACKLIST_AUTH
        SELECT	MEM_NUM
             ,'Y' -- FR_AUTH_VIEW : 자유게시판 게시글보기 Y/N
             ,'Y' -- FR_AUTH_WRITE : 자유게시판 게시글쓰기 Y/N
             ,'Y' -- FR_AUTH_COMMENT : 자유게시판 댓글쓰기 Y/N
             ,'Y' -- AN_AUTH_VIEW : 익명게시판 게시글보기 Y/N
             ,'Y' -- AN_AUTH_WRITE : 익명게시판 게시글쓰기 Y/N
             ,'Y' -- AN_AUTH_COMMENT : 익명게시판 댓글쓰기 Y/N
             ,sysdate -- CREATION_DATE : TIMESTAMP,
             ,sysdate -- LAST_UPDATE_DATE : TIMESTAMP
        FROM FR_FREE
        WHERE FR_NO = #{ ATTRIBUTE1 }
    </insert>

    <insert id="ajaxBlacklistFRInsertDetail">
        -- 없으면 새로생성(권한자는 일단 전부 부여로) for 자유게시판
        INSERT INTO MEM_BLACKLIST_DETAIL
        SELECT	DECODE((SELECT MAX(SEQ) FROM MEM_BLACKLIST_DETAIL),NULL,1,(SELECT MAX(SEQ) FROM MEM_BLACKLIST_DETAIL)+1)
             ,SYSDATE
             ,FF.MEM_NUM
             ,#{ ATTRIBUTE1 }
             ,'FR'
             ,SUBSTR(#{ ATTRIBUTE2 },3)
             ,'N'
             ,SYSDATE
             ,SYSDATE
        FROM 	FR_FREE FF
        WHERE   FF.FR_NO = #{ ATTRIBUTE2 }
    </insert>

    <select id="ajaxBlacklistCntNB" resultMap="cajaxselect">
        -- 기존에 블랙리스트 있는지 여부 (0 이상이면 있다) for 공용
        SELECT TO_CHAR(count(1)) AS a1
             ,' ' a2
             ,' ' a3
             ,' ' a4
             ,' ' a5
             ,' ' a6
             ,' ' a7
             ,' ' a8
             ,' ' a9
             ,' ' a10
        FROM MEM_BLACKLIST_AUTH
        WHERE MEM_NUM = (SELECT MEM_NUM FROM NB_NONE
                         WHERE NB_NO = #{ ATTRIBUTE1 })
    </select>

    <insert id="ajaxBlacklistNBInsert">
        -- 없으면 새로생성(권한자는 일단 전부 부여로) for 자유게시판
        INSERT INTO MEM_BLACKLIST_AUTH
        SELECT	MEM_NUM
             ,'Y' -- FR_AUTH_VIEW : 자유게시판 게시글보기 Y/N
             ,'Y' -- FR_AUTH_WRITE : 자유게시판 게시글쓰기 Y/N
             ,'Y' -- FR_AUTH_COMMENT : 자유게시판 댓글쓰기 Y/N
             ,'Y' -- AN_AUTH_VIEW : 익명게시판 게시글보기 Y/N
             ,'Y' -- AN_AUTH_WRITE : 익명게시판 게시글쓰기 Y/N
             ,'Y' -- AN_AUTH_COMMENT : 익명게시판 댓글쓰기 Y/N
             ,sysdate -- CREATION_DATE : TIMESTAMP,
             ,sysdate -- LAST_UPDATE_DATE : TIMESTAMP
        FROM NB_NONE
        WHERE NB_NO = #{ ATTRIBUTE1 }
    </insert>

    <insert id="ajaxBlacklistNBInsertDetail">
        -- 없으면 새로생성(권한자는 일단 전부 부여로) for 자유게시판
        INSERT INTO MEM_BLACKLIST_DETAIL
        SELECT	DECODE((SELECT MAX(SEQ) FROM MEM_BLACKLIST_DETAIL),NULL,1,(SELECT MAX(SEQ) FROM MEM_BLACKLIST_DETAIL)+1)
             ,SYSDATE
             ,FF.MEM_NUM
             ,#{ ATTRIBUTE1 }
             ,'NB'
             ,SUBSTR(#{ ATTRIBUTE2 },3)
             ,'N'
             ,SYSDATE
             ,SYSDATE
        FROM 	NB_NONE FF
        WHERE   FF.NB_NO = #{ ATTRIBUTE2 }
    </insert>

    <select id="ajaxBlacklistUserListName" resultMap="cajaxselect">
        -- 블랙리스트 관리 > 리스트 :: SELECT (사원이름)
        SELECT  MEM.MEM_NAME								a1
        ,MBA.MEM_NUM 								a2
        ,COUNT(MBD.MEM_NUM)							a3
        ,TO_CHAR(MBA.CREATION_DATE,'YYYY/MM/DD')	a4
        ,' '	a5
        ,' '	a6
        ,' '	a7
        ,' '	a8
        ,' '	a9
        ,' '	a10

        FROM	MEM_BLACKLIST_AUTH MBA
        ,MEMBER MEM
        ,MEM_BLACKLIST_DETAIL MBD
        WHERE	1=1
        AND 	MBA.MEM_NUM = MEM.MEM_NUM
        AND  MBA.MEM_NUM = MBD.MEM_NUM
        AND  MEM.MEM_NAME LIKE #{ ATTRIBUTE1 } || '%'
        GROUP BY MEM.MEM_NAME, MBA.MEM_NUM, TO_CHAR(MBA.CREATION_DATE,'YYYY/MM/DD')
        ORDER BY MEM.MEM_NAME
    </select>

    <select id="ajaxBlacklistUserListEnum" resultMap="cajaxselect">
        SELECT  MEM.MEM_NAME								a1		-- 이름
        ,MBA.MEM_NUM 								a2	-- 사원번호
        ,COUNT(MBD.MEM_NUM)								a3		-- 누적신고횟수
        ,TO_CHAR(MBA.CREATION_DATE,'YYYY/MM/DD')	a4	-- 등록날짜
        ,' '	a5
        ,' '	a6
        ,' '	a7
        ,' '	a8
        ,' '	a9
        ,' '	a10

        FROM	MEM_BLACKLIST_AUTH MBA
        ,MEMBER MEM
        ,MEM_BLACKLIST_DETAIL MBD
        WHERE	1=1
        AND 	MBA.MEM_NUM = MEM.MEM_NUM
        AND  MBA.MEM_NUM = MBD.MEM_NUM
        AND  MEM.MEM_NUM LIKE #{ ATTRIBUTE1 } || '%'
        GROUP BY MEM.MEM_NAME, MBA.MEM_NUM, TO_CHAR(MBA.CREATION_DATE,'YYYY/MM/DD')
        ORDER BY MEM.MEM_NAME
    </select>

    <select id="ajaxBlacklistDetailList" resultMap="cajaxselect">
        SELECT	TO_CHAR(DEC_DATE,'YYYY/MM/DD') a1 -- 신고날짜
                ,DESCRIPTION	a2 -- 신고사유
                ,'처리완료' 			a3-- 처리내역
             ,' ' a4
                ,' '	a5
                ,' '	a6
                ,' '	a7
                ,' '	a8
                ,' '	a9
                ,' '	a10
        FROM	MEM_BLACKLIST_DETAIL
        WHERE  MEM_NUM = #{ ATTRIBUTE1 } -- 멤버번호
    </select>
</mapper>